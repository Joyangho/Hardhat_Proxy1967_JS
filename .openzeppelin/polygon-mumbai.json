{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x05B4768Feaf910fe35547B365838A32FAfe368eC",
      "txHash": "0x69ef9e3352323ebaa73901b6a2b1d4460782394a4b132e241e1410e7ffaa57d9",
      "kind": "transparent"
    },
    {
      "address": "0xcB8f93daa4d02AB951d2A8D18AAf50e072546030",
      "txHash": "0xb049a436a452b2fc21365382cfb8616a186b9b88101aeae7e3dc8b114ab05483",
      "kind": "transparent"
    },
    {
      "address": "0xC03D9A98e73fbC2c2cFcA34bFfb48c5Cd127b9C7",
      "txHash": "0xc7145abacdda3c0c02c89c660a8060f111fdef9d860e7cf1dd396b19bb771bcf",
      "kind": "transparent"
    },
    {
      "address": "0x40516085554446dF57BF103D356BFe2173C5A7f2",
      "txHash": "0xc280457272ec9aec7003faba227cc29c582576eab57b40efe27481b703172139",
      "kind": "transparent"
    },
    {
      "address": "0xCa38133E155029776e55B1e7f7b7Ee217efdc36c",
      "txHash": "0xe1250c6016a4b7e2512eb21d34524d10f970e4577f63ca62c25c3349e3b5342c",
      "kind": "transparent"
    },
    {
      "address": "0xB9139cBA2caa08d88c33b9A96db11A6cB1D8960b",
      "txHash": "0xe67b5fdf76b91af07656a79a023a704e746c346f088bc8bd1a000f12213e2eac",
      "kind": "transparent"
    },
    {
      "address": "0xF740f189D55AdcdfA2a3e29724163C9c473c8fB2",
      "txHash": "0x965e706cb0f0c1399ec4b932d0d0f3fcdece8643af8a6f9a5995e4dd4be0590d",
      "kind": "transparent"
    },
    {
      "address": "0x7B8B9b8F1C941CF797090d0E9D6e0C2f9C979f85",
      "txHash": "0x7722704dbd35fefee646b6c0fc6bde56846967682356a46bc4479477b3683f14",
      "kind": "transparent"
    },
    {
      "address": "0x31F5F208e71C39c04e69483414999780f6b08867",
      "txHash": "0xc947e763cd53e429ebc5829779ebb687d2ac969d6d0e3f766977eba784ffaa91",
      "kind": "transparent"
    },
    {
      "address": "0xb410e00e7c4ecFdC3De800e59379DE2F4dCb0927",
      "txHash": "0xc4935a02f938e46901db5fcd52d8e1caaa96f755c0c53007b270734d6daf761c",
      "kind": "transparent"
    },
    {
      "address": "0x0374450065D3609bcA877A4DAd7dA3D2524Af5F1",
      "txHash": "0x8b80495dca3947363f8161419b6773ac89fc3e9fd7023c53ccb0766002adeb5c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "743d035d1f376516dd1b586ec02a773395d7e0e810447274d342263fc8c9f60e": {
      "address": "0xCED505A9B5F7Fc20ca24275556bDeae94e4827f2",
      "txHash": "0xf596a417e2e45fcea5835777327f49d8a13d0f0287850e0883ef57f08f8d8b85",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)1348_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace208)1343_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)1348_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)651_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)262_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)182_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)542_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)578_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)1343_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)1348_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VotesStorage)102_storage": {
            "label": "struct VotesUpgradeable.VotesStorage",
            "members": [
              {
                "label": "_delegatee",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_delegateCheckpoints",
                "type": "t_mapping(t_address,t_struct(Trace208)1343_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalCheckpoints",
                "type": "t_struct(Trace208)1343_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:41",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)1343_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:43",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)1343_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:45",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
